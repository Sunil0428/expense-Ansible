- name: configuring backend for expense
  hosts: backend
  become: yes
  tasks:
  - name: disable default nodejs
    ansible.builtin.command:
      cmd: dnf module disable nodejs -y
  - name: disable default nodejs
    ansible.builtin.command:
      cmd: dnf module enable nodejs:20 -y
  - name: installing nodejs
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql
  - name: ansible to install boto3 botocore
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9
  - name: Add the user 'expense' with a specific uid and a primary group of 'admin'
    ansible.builtin.user:
      name: expense
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory
  - name: Download backend.zip from S3
    ansible.builtin.get_url:
      url: "https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip"
      dest: "/tmp/backend.zip"
      mode: '0644'
  - name: Unzip backend.zip into /app
    ansible.builtin.unarchive:
      src: "/tmp/backend.zip"
      dest: "/app"
      remote_src: yes
  - name: Run npm install in /app directory
    ansible.builtin.command:
      cmd: "npm install"
      chdir: "/app"
  - name: Copy backend service file
    ansible.builtin.copy:
       src: "backend.service"
       dest: "/etc/systemd/system/backend.service"
  - name: Enable and start backend service
    ansible.builtin.systemd:
      name: backend
      enabled: yes
      state: started
      daemon_reload: true
  - name: Enable and start backend service
    ansible.builtin.systemd:
      name: backend
      state: started
      enabled: yes
  - name: import mysql data
    community.mysql.mysql_db:
      login_user: root
      login_password: ExpenseApp@1
      login_host: 172.31.90.70
      target: /app/schema/backend.sql
      name: all 
      state: import
  
  - name: Enable and start backend service
    ansible.builtin.systemd:
      name: backend
      state: restarted
      daemon_reload: true


