- name: playbook for setting up backend
  hosts: backend
  become: yes
  tasks: 
    - name: Disable Node.js module
      ansible.builtin.command:
        cmd: dnf module disable nodejs -y
    - name: Enable Node.js module
      ansible.builtin.command:
        cmd: dnf module enable nodejs:20 -y
    - name: Installing nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: present
    - name: Create user 'expense'
      ansible.builtin.user:
        name: expense
        state: present
    - name: Create /app directory
      ansible.builtin.file:
        path: /app
        state: directory
    - name: Ensure /app directory exists
      ansible.builtin.file:
        path: /app
        state: directory
    - name: Install npm dependencies
      ansible.builtin.command:
        cmd: npm install
      args:
        chdir: /app
    - name: Copy config file to Node.js application
      ansible.builtin.copy:
        src: /home/ec2-user/expense-Ansible/backend.service
        dest: /etc/systemd/system/backend.service
    - name: Start backend service
      ansible.builtin.systemd:
        name: backend
        state: started
    - name: Enable backend service to start on boot
      ansible.builtin.systemd:
        name: backend
        enabled: yes
    - name: Install MySQL Client
      ansible.builtin.dnf:
        name: mysql
        state: present
        
    - name: Install PyMySQL (for Python 3.x compatibility)
      ansible.builtin.pip:
        name: PyMySQL
        state: present

    - name: Execute SQL commands
      community.mysql.mysql_query:
      community.mysql.mysql_db:
        login_user: root
        login_password: ExpenseApp@1
        login_host: 172.31.19.135
        state: import
        name: all
        target: /app/schema/backend.sql
    
        
